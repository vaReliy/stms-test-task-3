{"version":3,"file":"src_app_features_follow-list_follow-list_module_ts-es2015.js","mappings":"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","sources":["./src/app/features/follow-list/filter/filter.component.ts","./src/app/features/follow-list/filter/filter.component.html","./src/app/features/follow-list/follow-list-routing.module.ts","./src/app/features/follow-list/follow-list.module.ts","./src/app/features/follow-list/follow-list/follow-list.component.ts","./src/app/features/follow-list/follow-list/follow-list.component.html"],"sourcesContent":["import { ChangeDetectionStrategy, Component, EventEmitter, OnDestroy, OnInit, Output } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { auditTime, takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'st-filter',\n  templateUrl: './filter.component.html',\n  styleUrls: ['./filter.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FilterComponent implements OnInit, OnDestroy {\n  @Output() filterChange = new EventEmitter();\n\n  form = this.fb.group({\n    filterBy: this.fb.control('orderName'),\n    query: this.fb.control(''),\n  });\n\n  private subscribeHolder$ = new Subject();\n\n  constructor(private readonly fb: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.form.valueChanges.pipe(\n      auditTime(300),\n      takeUntil(this.subscribeHolder$)\n    ).subscribe((filter) => {\n      this.filterChange.emit(filter);\n    });\n  }\n\n  resetForm(): void {\n    this.form.reset({filterBy: 'orderName'});\n  }\n\n  clearQuery(): void {\n    this.form.get('query')?.setValue('');\n  }\n\n  ngOnDestroy(): void {\n    this.subscribeHolder$.next();\n    this.subscribeHolder$.complete();\n  }\n}\n","<div [formGroup]=\"form\" class=\"f-row\">\n    <mat-select formControlName=\"filterBy\" class=\"w-30p\" (selectionChange)=\"clearQuery()\">\n        <mat-option value=\"fullName\">{{'stms.shared.table.title.fullName' | translate}}</mat-option>\n        <mat-option value=\"orderName\">{{'stms.shared.table.title.orderName' | translate}}</mat-option>\n    </mat-select>\n\n    <mat-form-field class=\"ml-20\">\n        <mat-label *ngIf=\"form.get('filterBy')?.value as filterBy\">\n            {{'stms.follow-list.filter.placeholder' | translate}} {{'stms.shared.table.title.' + filterBy | translate}}\n        </mat-label>\n        <input matInput formControlName=\"query\">\n    </mat-form-field>\n\n    <button mat-raised-button class=\"actions-main ml-20\" (click)=\"resetForm()\">\n        {{'stms.follow-list.clear' | translate}}\n    </button>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FollowListComponent } from './follow-list/follow-list.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FollowListComponent,\n    data: {title: 'stms.menu.follow-list'}\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class FollowListRoutingModule {\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { SharedModule } from '../../shared/shared.module';\nimport { FollowListRoutingModule } from './follow-list-routing.module';\nimport { FollowListComponent } from './follow-list/follow-list.component';\nimport { FilterComponent } from './filter/filter.component';\nimport { StoreModule } from '@ngrx/store';\nimport { featureFollowListNode, followListReducer } from './follow.list.reducers';\n\n\n@NgModule({\n  declarations: [FollowListComponent, FilterComponent],\n  imports: [\n    CommonModule,\n    FollowListRoutingModule,\n    TranslateModule,\n    SharedModule,\n    StoreModule.forFeature(featureFollowListNode, followListReducer)\n  ]\n})\nexport class FollowListModule {\n}\n","/* eslint-disable @typescript-eslint/no-shadow */\nimport { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { combineLatest, Observable, Subject } from 'rxjs';\nimport { filter, map, startWith } from 'rxjs/operators';\nimport { Order } from '../../../shared/models/order.model';\nimport { Patient } from '../../../shared/models/patient.model';\nimport { Store, select } from '@ngrx/store';\nimport { FollowListState } from '../follow.list.reducers';\nimport { selectFollowedOrders, selectFollowedPatients } from '../follow-list.selectors';\nimport { RemoveFollowListOrderAction, RemoveFollowListPatientAction } from '../follow-list.actions';\n\ntype FilterData = {\n  filterBy: 'fullName' | 'orderName';\n  query: string;\n};\n\n@Component({\n  selector: 'st-follow-list',\n  templateUrl: './follow-list.component.html',\n  styleUrls: ['./follow-list.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FollowListComponent implements OnInit {\n  orderList$: Observable<Order[]>;\n  patientList$: Observable<Patient[]>;\n\n  followedOrders$: Observable<Order[]> = this.store$.pipe(select(selectFollowedOrders));\n\n  followedPatients$: Observable<Patient[]> = this.store$.pipe(select(selectFollowedPatients));\n\n  filter$ = new Subject<FilterData>();\n\n  constructor(\n    private readonly store$: Store<FollowListState>,\n  ) {\n  }\n\n  ngOnInit(): void {\n    const filterList = ({filter, list}) => list.filter(\n      (item) => filter.query\n      ? item[filter.filterBy].toLowerCase().includes(filter.query.toLowerCase())\n      : true\n    );\n\n    this.orderList$ = combineLatest([\n      this.filter$.pipe(startWith({filterBy: 'orderName', query: ''})),\n      this.followedOrders$\n    ]).pipe(\n      map(([filter, list]) => ({filter, list})),\n      filter(({filter, list}) => filter.filterBy === 'orderName' || !filter.query),\n      map(filterList)\n    );\n\n    this.patientList$ = combineLatest([\n      this.filter$.pipe(startWith({filterBy: 'fullName', query: ''})),\n      this.followedPatients$\n    ]).pipe(\n      map(([filter, list]) => ({filter, list})),\n      filter(({filter, list}) => filter.filterBy === 'fullName' || !filter.query),\n      map(filterList)\n    );\n  }\n\n  onUnfollowOrder(order: Order): void {\n    this.store$.dispatch(new RemoveFollowListOrderAction({\n      orderNum: order.orderNum\n    }));\n  }\n\n  onUnfollowPatient(patient: Patient): void {\n    this.store$.dispatch(new RemoveFollowListPatientAction({\n      code: patient.code\n    }));\n  }\n\n  onFilterChange(filter: FilterData): void {\n    this.filter$.next(filter);\n  }\n}\n","<div class=\"container\">\n    <div rtl>\n        <h1 class=\"main-heading\">{{ 'stms.follow-list.title' | translate }}</h1>\n        <div class=\"actions\">\n            <st-filter (filterChange)=\"onFilterChange($event)\"></st-filter>\n\n            <div *ngIf=\"orderList$ | async as orderList\" class=\"mt-2rem\">\n                <h2>{{'stms.follow-list.orders' | translate}}</h2>\n                <st-orders-table\n                    *ngIf=\"orderList.length; else empty\"\n                    [data]=\"orderList\"\n                    [actionType]=\"'remove'\"\n                    (action)=\"onUnfollowOrder($event)\">\n                </st-orders-table>\n            </div>\n\n            <div *ngIf=\"patientList$ | async as patientList\" class=\"mt-2rem\">\n                <h2>{{'stms.follow-list.patients' | translate}}</h2>\n                <st-patient-table\n                    *ngIf=\"patientList.length; else empty\"\n                    [data]=\"patientList\"\n                    [actionType]=\"'remove'\"\n                    (action)=\"onUnfollowPatient($event)\">\n                </st-patient-table>\n            </div>\n        </div>\n    </div>\n</div>\n\n<ng-template #empty>\n    <div>{{'stms.follow-list.empty' | translate}}</div>\n</ng-template>\n"],"names":[],"sourceRoot":"webpack:///"}