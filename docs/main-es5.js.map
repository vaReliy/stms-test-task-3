{"version":3,"mappings":"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","names":["e","webpackEmptyAsyncContext","module","_angular_core__WEBPACK_IMPORTED_MODULE_4__","_r0","AppRootComponent","store","storageService","_environments_environment__WEBPACK_IMPORTED_MODULE_1__","Date","getFullYear","link","label","navItems","testLocalStorage","isIEorEdgeOrSafari","dispatch","pageAnimationsDisabled","isAuthenticated$","pipe","_core_core_module__WEBPACK_IMPORTED_MODULE_2__","stickyHeader$","language$","theme$","language","value","includes","name","selectors","decls","vars","consts","template","ctx","routes","path","redirectTo","pathMatch","loadChildren","Promise","then","m","PatientsModule","OrdersModule","FollowListModule","SettingsModule","AppRoutingModule","_angular_router__WEBPACK_IMPORTED_MODULE_1__","scrollPositionRestoration","preloadingStrategy","relativeLinkResolution","imports","exports","AnimationsService","routeAnimationType","pageAnimations","elementsAnimations","type","factory","providedIn","ROUTE_ANIMATIONS_ELEMENTS","STEPS_ALL","opacity","position","optional","transform","STEPS_NONE","STEPS_PAGE","STEPS_ELEMENTS","routeAnimations","isRouteAnimationsAll","isRouteAnimationsNone","isRouteAnimationsPage","isRouteAnimationsElements","_animations_service__WEBPACK_IMPORTED_MODULE_0__","AuthGuardService","_auth_selectors__WEBPACK_IMPORTED_MODULE_0__","_angular_core__WEBPACK_IMPORTED_MODULE_2__","authLogin","authLogout","AUTH_KEY","AuthEffects","actions$","localStorageService","router","_auth_actions__WEBPACK_IMPORTED_MODULE_1__","setItem","isAuthenticated","navigate","initialState","reducer","_auth_actions__WEBPACK_IMPORTED_MODULE_0__","state","Object","authReducer","action","selectAuth","_core_state__WEBPACK_IMPORTED_MODULE_0__","selectIsAuthenticated","httpLoaderFactory","http","_ngx_translate_http_loader__WEBPACK_IMPORTED_MODULE_16__","_environments_environment__WEBPACK_IMPORTED_MODULE_0__","CoreModule","parentModule","faIconLibrary","Error","addIcons","_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_17__","_fortawesome_free_brands_svg_icons__WEBPACK_IMPORTED_MODULE_18__","_angular_core__WEBPACK_IMPORTED_MODULE_19__","provide","_angular_common_http__WEBPACK_IMPORTED_MODULE_21__","useClass","_http_interceptors_http_error_interceptor__WEBPACK_IMPORTED_MODULE_12__","multi","_error_handler_app_error_handler_service__WEBPACK_IMPORTED_MODULE_9__","_ngrx_router_store__WEBPACK_IMPORTED_MODULE_22__","_router_custom_serializer__WEBPACK_IMPORTED_MODULE_10__","_angular_common__WEBPACK_IMPORTED_MODULE_23__","_angular_forms__WEBPACK_IMPORTED_MODULE_24__","_angular_material_sidenav__WEBPACK_IMPORTED_MODULE_25__","_angular_material_toolbar__WEBPACK_IMPORTED_MODULE_26__","_angular_material_list__WEBPACK_IMPORTED_MODULE_27__","_angular_material_menu__WEBPACK_IMPORTED_MODULE_28__","_angular_material_icon__WEBPACK_IMPORTED_MODULE_29__","_angular_material_select__WEBPACK_IMPORTED_MODULE_30__","_angular_material_tooltip__WEBPACK_IMPORTED_MODULE_31__","_angular_material_snack_bar__WEBPACK_IMPORTED_MODULE_32__","_angular_material_button__WEBPACK_IMPORTED_MODULE_33__","_ngrx_store__WEBPACK_IMPORTED_MODULE_34__","_core_state__WEBPACK_IMPORTED_MODULE_1__","metaReducers","_ngrx_effects__WEBPACK_IMPORTED_MODULE_35__","_auth_auth_effects__WEBPACK_IMPORTED_MODULE_2__","_settings_settings_effects__WEBPACK_IMPORTED_MODULE_14__","_ngrx_store_devtools__WEBPACK_IMPORTED_MODULE_36__","_fortawesome_angular_fontawesome__WEBPACK_IMPORTED_MODULE_20__","_ngx_translate_core__WEBPACK_IMPORTED_MODULE_37__","loader","useFactory","deps","reducers","auth","_auth_auth_reducer__WEBPACK_IMPORTED_MODULE_3__","settings","_settings_settings_reducer__WEBPACK_IMPORTED_MODULE_4__","_ngrx_router_store__WEBPACK_IMPORTED_MODULE_5__","_meta_reducers_init_state_from_local_storage_reducer__WEBPACK_IMPORTED_MODULE_1__","unshift","_meta_reducers_debug_reducer__WEBPACK_IMPORTED_MODULE_2__","selectAuthState","selectSettingsState","selectRouterState","AppErrorHandler","notificationsService","error","displayMessage","HttpErrorInterceptor","injector","request","next","handle","err","_angular_common_http__WEBPACK_IMPORTED_MODULE_1__","appErrorHandler","get","handleError","APP_PREFIX","LocalStorageService","key","localStorage","JSON","stringify","parse","getItem","removeItem","testValue","testKey","errorMessage","retrievedValue","keys","reduce","storageKey","stateKeys","replace","toLowerCase","split","map","token","index","charAt","toUpperCase","slice","join","currentStateRef","forEach","length","debug","newState","console","log","payload","oldState","initStateFromLocalStorage","_ngrx_store__WEBPACK_IMPORTED_MODULE_1__","_local_storage_local_storage_service__WEBPACK_IMPORTED_MODULE_0__","NotificationService","snackBar","zone","message","show","duration","panelClass","configuration","run","open","_angular_core__WEBPACK_IMPORTED_MODULE_0__","CustomSerializer","routerState","route","root","firstChild","url","queryParams","params","actionSettingsChangeLanguage","actionSettingsChangeTheme","actionSettingsChangeAutoNightMode","actionSettingsChangeStickyHeader","actionSettingsChangeAnimationsPage","actionSettingsChangeAnimationsPageDisabled","actionSettingsChangeAnimationsElements","actionSettingsChangeHour","SETTINGS_KEY","INIT","SettingsEffects","overlayContainer","titleService","animationsService","translateService","ngZone","runOutsideAngular","setInterval","hour","getHours","_settings_actions__WEBPACK_IMPORTED_MODULE_4__","_settings_selectors__WEBPACK_IMPORTED_MODULE_5__","updateRouteAnimationType","effectiveTheme","classList","getContainerElement","toRemove","Array","from","filter","item","remove","add","use","events","event","_angular_router__WEBPACK_IMPORTED_MODULE_15__","setTitle","snapshot","_angular_core__WEBPACK_IMPORTED_MODULE_16__","NIGHT_MODE_THEME","theme","autoNightMode","nightTheme","_settings_model__WEBPACK_IMPORTED_MODULE_0__","stickyHeader","_settings_actions__WEBPACK_IMPORTED_MODULE_1__","settingsReducer","selectSettings","selectSettingsStickyHeader","selectSettingsLanguage","selectTheme","selectPageAnimations","selectElementsAnimations","selectAutoNightMode","selectNightTheme","selectHour","selectIsNightHour","selectEffectiveTheme","isNightHour","TitleService","title","lazyTranslateService","lastChild","children","data","translate","translatedTitle","subscribe","MainModule","bootstrap","_app_root_app_root_component__WEBPACK_IMPORTED_MODULE_2__","_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_4__","_angular_platform_browser__WEBPACK_IMPORTED_MODULE_5__","_core_core_module__WEBPACK_IMPORTED_MODULE_0__","_app_routing_module__WEBPACK_IMPORTED_MODULE_1__","declarations","packageJson","__webpack_require__","environment","apiUrl","appName","envName","production","test","i18nPrefix","versions","app","version","angular","dependencies","ngrx","material","rxjs","ngxtranslate","fontAwesome","angularCli","devDependencies","typescript","cypress","eslint","_angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__","bootstrapModule","_app_main_module__WEBPACK_IMPORTED_MODULE_0__"],"sources":["webpack:///$_lazy_route_resources|lazy|groupOptions:%20%7B%7D|namespace%20object","webpack:///src/app/app-root/app-root.component.html","webpack:///src/app/app-root/app-root.component.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/core/animations/animations.service.ts","webpack:///src/app/core/animations/route.animations.ts","webpack:///src/app/core/auth/auth-guard.service.ts","webpack:///src/app/core/auth/auth.actions.ts","webpack:///src/app/core/auth/auth.effects.ts","webpack:///src/app/core/auth/auth.reducer.ts","webpack:///src/app/core/auth/auth.selectors.ts","webpack:///src/app/core/core.module.ts","webpack:///src/app/core/core.state.ts","webpack:///src/app/core/error-handler/app-error-handler.service.ts","webpack:///src/app/core/http-interceptors/http-error.interceptor.ts","webpack:///src/app/core/local-storage/local-storage.service.ts","webpack:///src/app/core/meta-reducers/debug.reducer.ts","webpack:///src/app/core/meta-reducers/init-state-from-local-storage.reducer.ts","webpack:///src/app/core/notifications/notification.service.ts","webpack:///src/app/core/router/custom-serializer.ts","webpack:///src/app/core/settings/settings.actions.ts","webpack:///src/app/core/settings/settings.effects.ts","webpack:///src/app/core/settings/settings.model.ts","webpack:///src/app/core/settings/settings.reducer.ts","webpack:///src/app/core/settings/settings.selectors.ts","webpack:///src/app/core/title/title.service.ts","webpack:///src/app/main.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 98255;\nmodule.exports = webpackEmptyAsyncContext;","<div [class]=\"'theme-wrapper ' + (theme$ | async)\">\n\n  <mat-sidenav-container>\n\n    <mat-sidenav #sidenav mode=\"push\">\n      <div class=\"branding\"><img src=\"assets/logo.png\" alt=\"logo\"/>\n        <span>{{ 'stms.title.short' | translate}}</span>\n      </div>\n      <mat-nav-list>\n        <a mat-list-item *ngFor=\"let item of navigationSideMenu\" (click)=\"sidenav.close()\" [routerLink]=\"[item.link]\"\n          routerLinkActive=\"active\">\n          {{item.label | translate}}\n        </a>\n      </mat-nav-list>\n    </mat-sidenav>\n\n    <div class=\"wrapper\">\n\n      <div class=\"toolbar\" [style.position]=\"(stickyHeader$ | async) ? 'fixed' : 'inherit'\"\n        [class.mat-elevation-z4]=\"(stickyHeader$ | async)\">\n        <mat-toolbar color=\"primary\">\n          <button\n          mat-icon-button\n          class=\"d-md-none\"\n          (click)=\"sidenav.open()\">\n            <fa-icon icon=\"bars\"></fa-icon>\n          </button>\n\n          <span routerLink=\"\" class=\"branding spacer center d-inline d-sm-none\">\n            <img src=\"assets/logo.png\" alt=\"logo\"/></span>\n          <span routerLink=\"\" class=\"branding spacer d-none d-sm-inline d-md-none\"><img src=\"assets/logo.png\" alt=\"logo\"/> {{\n            'stms.title.short' | translate }}</span>\n          <span routerLink=\"\" class=\"branding spacer d-none d-md-inline\"><img src=\"assets/logo.png\" alt=\"logo\" /> {{ 'stms.title.long' | translate\n            }}</span>\n\n          <span class=\"d-none d-md-inline\">\n            <button mat-button class=\"nav-button\" *ngFor=\"let item of navigationSideMenu\" [routerLink]=\"[item.link]\"\n              routerLinkActive=\"active\">\n              {{item.label | translate}}\n            </button>\n          </span>\n\n          <!-- eslint-disable-next-line @angular-eslint/template/no-negated-async -->\n          <button mat-button mat-stroked-button *ngIf=\"!(isAuthenticated$ | async)\" (click)=\"onLoginClick()\">\n            {{ 'stms.menu.login' | translate }}\n          </button>\n\n          <button *ngIf=\"(isAuthenticated$ | async)\"\n                  mat-icon-button\n                  [matMenuTriggerFor]=\"toolbarUserMenu\">\n            <fa-icon icon=\"user-circle\"></fa-icon>\n          </button>\n          <mat-menu #toolbarUserMenu=\"matMenu\">\n            <button mat-menu-item (click)=\"onLogoutClick()\">\n              <mat-icon><fa-icon icon=\"power-off\"></fa-icon></mat-icon>\n              <span>{{ 'stms.menu.logout' | translate }}</span>\n            </button>\n          </mat-menu>\n\n          <button mat-icon-button routerLink=\"settings\" class=\"d-none d-sm-inline\">\n            <fa-icon icon=\"cog\"></fa-icon>\n          </button>\n\n          <span *ngIf=\"language$ | async as language\">\n            <mat-select [ngModel]=\"language\" (selectionChange)=\"onLanguageSelect($event)\">\n              <mat-option *ngFor=\"let l of languages\" [value]=\"l\">\n                {{ l.toUpperCase() }}\n              </mat-option>\n            </mat-select>\n          </span>\n        </mat-toolbar>\n      </div>\n\n      <div class=\"content\"\n        [@routeAnimations]=\"o.isActivated && o.activatedRoute.routeConfig.data && o.activatedRoute.routeConfig.data.title\">\n        <router-outlet #o=\"outlet\"></router-outlet>\n      </div>\n\n      <div class=\"footer\">\n        <div class=\"row\">\n          <!-- nothing here -->\n        </div>\n      </div>\n\n    </div>\n\n  </mat-sidenav-container>\n\n</div>","import browser from 'browser-detect';\nimport { Component, OnInit } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\nimport { Observable } from 'rxjs';\n\nimport { environment as env } from '../../environments/environment';\n\nimport {\n  authLogin,\n  authLogout,\n  routeAnimations,\n  LocalStorageService,\n  selectIsAuthenticated,\n  selectSettingsStickyHeader,\n  selectSettingsLanguage,\n  selectEffectiveTheme\n} from '../core/core.module';\nimport {\n  actionSettingsChangeAnimationsPageDisabled,\n  actionSettingsChangeLanguage\n} from '../core/settings/settings.actions';\n\n@Component({\n  selector: 'st-root',\n  templateUrl: './app-root.component.html',\n  styleUrls: ['./app-root.component.scss'],\n  animations: [routeAnimations]\n})\nexport class AppRootComponent implements OnInit {\n  isProd = env.production;\n  envName = env.envName;\n  version = env.versions.app;\n  year = new Date().getFullYear();\n  languages = ['en', 'he'];\n  navItems = [\n    { link: 'patients', label: 'stms.menu.patients' },\n    { link: 'orders', label: 'stms.menu.orders' },\n    { link: 'follow-list', label: 'stms.menu.follow-list' }\n  ];\n  navigationSideMenu = [\n    ...this.navItems,\n    { link: 'settings', label: 'stms.menu.settings' }\n  ];\n\n  isAuthenticated$: Observable<boolean>;\n  stickyHeader$: Observable<boolean>;\n  language$: Observable<string>;\n  theme$: Observable<string>;\n\n  constructor(\n    private store: Store,\n    private storageService: LocalStorageService\n  ) {}\n\n  private static isIEorEdgeOrSafari() {\n    return ['ie', 'edge', 'safari'].includes(browser().name);\n  }\n\n  ngOnInit(): void {\n    this.storageService.testLocalStorage();\n    if (AppRootComponent.isIEorEdgeOrSafari()) {\n      this.store.dispatch(\n        actionSettingsChangeAnimationsPageDisabled({\n          pageAnimationsDisabled: true\n        })\n      );\n    }\n\n    this.isAuthenticated$ = this.store.pipe(select(selectIsAuthenticated));\n    this.stickyHeader$ = this.store.pipe(select(selectSettingsStickyHeader));\n    this.language$ = this.store.pipe(select(selectSettingsLanguage));\n    this.theme$ = this.store.pipe(select(selectEffectiveTheme));\n  }\n\n  onLoginClick() {\n    this.store.dispatch(authLogin());\n  }\n\n  onLogoutClick() {\n    this.store.dispatch(authLogout());\n  }\n\n  onLanguageSelect({ value: language }) {\n    this.store.dispatch(actionSettingsChangeLanguage({ language }));\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'patients',\n    pathMatch: 'full'\n  },\n  {\n    path: 'patients',\n    loadChildren: () =>\n      import('./features/patients/patients.module').then(m => m.PatientsModule)\n  },\n  {\n    path: 'orders',\n    loadChildren: () =>\n      import('./features/orders/orders.module').then(m => m.OrdersModule)\n  },\n  {\n    path: 'follow-list',\n    loadChildren: () =>\n      import('./features/follow-list/follow-list.module').then(m => m.FollowListModule)\n  },\n  {\n    path: 'settings',\n    loadChildren: () =>\n      import('./features/settings/settings.module').then(m => m.SettingsModule)\n  },\n  {\n    path: '**',\n    redirectTo: 'patients'\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, {\n      scrollPositionRestoration: 'enabled',\n      preloadingStrategy: PreloadAllModules,\n      relativeLinkResolution: 'legacy'\n    })\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AnimationsService {\n  private static routeAnimationType: RouteAnimationType = 'NONE';\n\n  constructor() {\n    AnimationsService.routeAnimationType = 'NONE';\n  }\n\n  static isRouteAnimationsType(type: RouteAnimationType) {\n    return AnimationsService.routeAnimationType === type;\n  }\n\n  updateRouteAnimationType(\n    pageAnimations: boolean,\n    elementsAnimations: boolean\n  ) {\n    AnimationsService.routeAnimationType =\n      pageAnimations && elementsAnimations\n        ? 'ALL'\n        : pageAnimations\n        ? 'PAGE'\n        : elementsAnimations\n        ? 'ELEMENTS'\n        : 'NONE';\n  }\n}\n\nexport type RouteAnimationType = 'ALL' | 'PAGE' | 'ELEMENTS' | 'NONE';\n","import {\n  animate,\n  query,\n  style,\n  transition,\n  trigger,\n  stagger,\n  sequence\n} from '@angular/animations';\nimport { AnimationsService } from './animations.service';\n\nexport const ROUTE_ANIMATIONS_ELEMENTS = 'route-animations-elements';\n\nconst STEPS_ALL: any[] = [\n  query(':enter > *', style({ opacity: 0, position: 'fixed' }), {\n    optional: true\n  }),\n  query(':enter .' + ROUTE_ANIMATIONS_ELEMENTS, style({ opacity: 0 }), {\n    optional: true\n  }),\n  sequence([\n    query(\n      ':leave > *',\n      [\n        style({ transform: 'translateY(0%)', opacity: 1 }),\n        animate(\n          '0.2s ease-in-out',\n          style({ transform: 'translateY(-3%)', opacity: 0 })\n        ),\n        style({ position: 'fixed' })\n      ],\n      { optional: true }\n    ),\n    query(\n      ':enter > *',\n      [\n        style({\n          transform: 'translateY(-3%)',\n          opacity: 0,\n          position: 'static'\n        }),\n        animate(\n          '0.5s ease-in-out',\n          style({ transform: 'translateY(0%)', opacity: 1 })\n        )\n      ],\n      { optional: true }\n    )\n  ]),\n  query(\n    ':enter .' + ROUTE_ANIMATIONS_ELEMENTS,\n    stagger(75, [\n      style({ transform: 'translateY(10%)', opacity: 0 }),\n      animate(\n        '0.5s ease-in-out',\n        style({ transform: 'translateY(0%)', opacity: 1 })\n      )\n    ]),\n    { optional: true }\n  )\n];\nconst STEPS_NONE = [];\nconst STEPS_PAGE = [STEPS_ALL[0], STEPS_ALL[2]];\nconst STEPS_ELEMENTS = [STEPS_ALL[1], STEPS_ALL[3]];\n\nexport const routeAnimations = trigger('routeAnimations', [\n  transition(isRouteAnimationsAll, STEPS_ALL),\n  transition(isRouteAnimationsNone, STEPS_NONE),\n  transition(isRouteAnimationsPage, STEPS_PAGE),\n  transition(isRouteAnimationsElements, STEPS_ELEMENTS)\n]);\n\nexport function isRouteAnimationsAll() {\n  return AnimationsService.isRouteAnimationsType('ALL');\n}\n\nexport function isRouteAnimationsNone() {\n  return AnimationsService.isRouteAnimationsType('NONE');\n}\n\nexport function isRouteAnimationsPage() {\n  return AnimationsService.isRouteAnimationsType('PAGE');\n}\n\nexport function isRouteAnimationsElements() {\n  return AnimationsService.isRouteAnimationsType('ELEMENTS');\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { Store, select } from '@ngrx/store';\nimport { Observable } from 'rxjs';\n\nimport { selectIsAuthenticated } from './auth.selectors';\nimport { AppState } from '../core.state';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate {\n  constructor(private store: Store<AppState>) {}\n\n  canActivate(): Observable<boolean> {\n    return this.store.pipe(select(selectIsAuthenticated));\n  }\n}\n","import { createAction } from '@ngrx/store';\n\nexport const authLogin = createAction('[Auth] Login');\nexport const authLogout = createAction('[Auth] Logout');\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ofType, createEffect, Actions } from '@ngrx/effects';\nimport { tap } from 'rxjs/operators';\n\nimport { LocalStorageService } from '../local-storage/local-storage.service';\n\nimport { authLogin, authLogout } from './auth.actions';\n\nexport const AUTH_KEY = 'AUTH';\n\n@Injectable()\nexport class AuthEffects {\n  login = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(authLogin),\n        tap(() =>\n          this.localStorageService.setItem(AUTH_KEY, { isAuthenticated: true })\n        )\n      ),\n    { dispatch: false }\n  );\n\n  logout = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(authLogout),\n        tap(() => {\n          this.router.navigate(['']);\n          this.localStorageService.setItem(AUTH_KEY, {\n            isAuthenticated: false\n          });\n        })\n      ),\n    { dispatch: false }\n  );\n\n  constructor(\n    private actions$: Actions,\n    private localStorageService: LocalStorageService,\n    private router: Router\n  ) {}\n}\n","import { AuthState } from './auth.models';\nimport { authLogin, authLogout } from './auth.actions';\nimport { createReducer, on, Action } from '@ngrx/store';\n\nexport const initialState: AuthState = {\n  isAuthenticated: false\n};\n\nconst reducer = createReducer(\n  initialState,\n  on(authLogin, (state) => ({ ...state, isAuthenticated: true })),\n  on(authLogout, (state) => ({ ...state, isAuthenticated: false }))\n);\n\nexport function authReducer(\n  state: AuthState | undefined,\n  action: Action\n): AuthState {\n  return reducer(state, action);\n}\n","import { createSelector } from '@ngrx/store';\n\nimport { selectAuthState } from '../core.state';\nimport { AuthState } from './auth.models';\n\nexport const selectAuth = createSelector(\n  selectAuthState,\n  (state: AuthState) => state\n);\n\nexport const selectIsAuthenticated = createSelector(\n  selectAuthState,\n  (state: AuthState) => state.isAuthenticated\n);\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Optional, SkipSelf, ErrorHandler } from '@angular/core';\nimport {\n  HttpClientModule,\n  HttpClient,\n  HTTP_INTERCEPTORS\n} from '@angular/common/http';\nimport {\n  StoreRouterConnectingModule,\n  RouterStateSerializer\n} from '@ngrx/router-store';\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport {\n  FaIconLibrary,\n  FontAwesomeModule\n} from '@fortawesome/angular-fontawesome';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { FormsModule } from '@angular/forms';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\n\nimport { environment } from '../../environments/environment';\n\nimport {\n  AppState,\n  reducers,\n  metaReducers,\n  selectRouterState\n} from './core.state';\nimport { AuthEffects } from './auth/auth.effects';\nimport { selectIsAuthenticated, selectAuth } from './auth/auth.selectors';\nimport { authLogin, authLogout } from './auth/auth.actions';\nimport { AuthGuardService } from './auth/auth-guard.service';\nimport { TitleService } from './title/title.service';\nimport {\n  ROUTE_ANIMATIONS_ELEMENTS,\n  routeAnimations\n} from './animations/route.animations';\nimport { AnimationsService } from './animations/animations.service';\nimport { AppErrorHandler } from './error-handler/app-error-handler.service';\nimport { CustomSerializer } from './router/custom-serializer';\nimport { LocalStorageService } from './local-storage/local-storage.service';\nimport { HttpErrorInterceptor } from './http-interceptors/http-error.interceptor';\nimport { NotificationService } from './notifications/notification.service';\nimport { SettingsEffects } from './settings/settings.effects';\nimport {\n  selectSettingsLanguage,\n  selectEffectiveTheme,\n  selectSettingsStickyHeader\n} from './settings/settings.selectors';\nimport { MatButtonModule } from '@angular/material/button';\nimport {\n  faCog,\n  faBars,\n  faRocket,\n  faPowerOff,\n  faUserCircle,\n  faPlayCircle\n} from '@fortawesome/free-solid-svg-icons';\nimport {\n  faGithub,\n  faMediumM,\n  faTwitter,\n  faInstagram,\n  faYoutube\n} from '@fortawesome/free-brands-svg-icons';\n\nexport {\n  TitleService,\n  selectAuth,\n  authLogin,\n  authLogout,\n  routeAnimations,\n  AppState,\n  LocalStorageService,\n  selectIsAuthenticated,\n  ROUTE_ANIMATIONS_ELEMENTS,\n  AnimationsService,\n  AuthGuardService,\n  selectRouterState,\n  NotificationService,\n  selectEffectiveTheme,\n  selectSettingsLanguage,\n  selectSettingsStickyHeader\n};\n\nexport function httpLoaderFactory(http: HttpClient) {\n  return new TranslateHttpLoader(\n    http,\n    `${environment.i18nPrefix}/assets/i18n/`,\n    '.json'\n  );\n}\n\n@NgModule({\n  imports: [\n    // angular\n    CommonModule,\n    HttpClientModule,\n    FormsModule,\n\n    // material\n    MatSidenavModule,\n    MatToolbarModule,\n    MatListModule,\n    MatMenuModule,\n    MatIconModule,\n    MatSelectModule,\n    MatTooltipModule,\n    MatSnackBarModule,\n    MatButtonModule,\n\n    // ngrx\n    StoreModule.forRoot(reducers, { metaReducers }),\n    StoreRouterConnectingModule.forRoot(),\n    EffectsModule.forRoot([AuthEffects, SettingsEffects]),\n    environment.production\n      ? []\n      : StoreDevtoolsModule.instrument({\n          name: 'STMS test task'\n        }),\n\n    // 3rd party\n    FontAwesomeModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: httpLoaderFactory,\n        deps: [HttpClient]\n      }\n    })\n  ],\n  declarations: [],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: HttpErrorInterceptor, multi: true },\n    { provide: ErrorHandler, useClass: AppErrorHandler },\n    { provide: RouterStateSerializer, useClass: CustomSerializer }\n  ],\n  exports: [\n    // angular\n    FormsModule,\n\n    // material\n    MatSidenavModule,\n    MatToolbarModule,\n    MatListModule,\n    MatMenuModule,\n    MatIconModule,\n    MatSelectModule,\n    MatTooltipModule,\n    MatSnackBarModule,\n    MatButtonModule,\n\n    // 3rd party\n    FontAwesomeModule,\n    TranslateModule\n  ]\n})\nexport class CoreModule {\n  constructor(\n    @Optional()\n    @SkipSelf()\n    parentModule: CoreModule,\n    faIconLibrary: FaIconLibrary\n  ) {\n    if (parentModule) {\n      throw new Error('CoreModule is already loaded. Import only in MainModule');\n    }\n    faIconLibrary.addIcons(\n      faCog,\n      faBars,\n      faRocket,\n      faPowerOff,\n      faUserCircle,\n      faPlayCircle,\n      faGithub,\n      faMediumM,\n      faTwitter,\n      faInstagram,\n      faYoutube\n    );\n  }\n}\n","import {\n  ActionReducerMap,\n  MetaReducer,\n  createFeatureSelector\n} from '@ngrx/store';\nimport { routerReducer, RouterReducerState } from '@ngrx/router-store';\n\nimport { environment } from '../../environments/environment';\n\nimport { initStateFromLocalStorage } from './meta-reducers/init-state-from-local-storage.reducer';\nimport { debug } from './meta-reducers/debug.reducer';\nimport { AuthState } from './auth/auth.models';\nimport { authReducer } from './auth/auth.reducer';\nimport { RouterStateUrl } from './router/router.state';\nimport { settingsReducer } from './settings/settings.reducer';\nimport { SettingsState } from './settings/settings.model';\n\nexport const reducers: ActionReducerMap<AppState> = {\n  auth: authReducer,\n  settings: settingsReducer,\n  router: routerReducer\n};\n\nexport const metaReducers: MetaReducer<AppState>[] = [\n  initStateFromLocalStorage\n];\n\nif (!environment.production) {\n  if (!environment.test) {\n    metaReducers.unshift(debug);\n  }\n}\n\nexport const selectAuthState = createFeatureSelector<AppState, AuthState>(\n  'auth'\n);\n\nexport const selectSettingsState = createFeatureSelector<\n  AppState,\n  SettingsState\n>('settings');\n\nexport const selectRouterState = createFeatureSelector<\n  AppState,\n  RouterReducerState<RouterStateUrl>\n>('router');\n\nexport interface AppState {\n  auth: AuthState;\n  settings: SettingsState;\n  router: RouterReducerState<RouterStateUrl>;\n}\n","import { Injectable, ErrorHandler } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { environment } from '../../../environments/environment';\n\nimport { NotificationService } from '../notifications/notification.service';\n\n/** Application-wide error handler that adds a UI notification to the error handling\n * provided by the default Angular ErrorHandler.\n */\n@Injectable()\nexport class AppErrorHandler extends ErrorHandler {\n  constructor(private notificationsService: NotificationService) {\n    super();\n  }\n\n  handleError(error: Error | HttpErrorResponse) {\n    let displayMessage = 'An error occurred.';\n\n    if (!environment.production) {\n      displayMessage += ' See console for details.';\n    }\n\n    this.notificationsService.error(displayMessage);\n\n    super.handleError(error);\n  }\n}\n","import { Injectable, Injector, ErrorHandler } from '@angular/core';\nimport {\n  HttpEvent,\n  HttpInterceptor,\n  HttpHandler,\n  HttpRequest,\n  HttpErrorResponse\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n/** Passes HttpErrorResponse to application-wide error handler */\n@Injectable()\nexport class HttpErrorInterceptor implements HttpInterceptor {\n  constructor(private injector: Injector) {}\n\n  intercept(\n    request: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    return next.handle(request).pipe(\n      tap({\n        error: (err: any) => {\n          if (err instanceof HttpErrorResponse) {\n            const appErrorHandler = this.injector.get(ErrorHandler);\n            appErrorHandler.handleError(err);\n          }\n        }\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\n\nconst APP_PREFIX = 'st-';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocalStorageService {\n  constructor() {}\n\n  static loadInitialState() {\n    return Object.keys(localStorage).reduce((state: any, storageKey) => {\n      if (storageKey.includes(APP_PREFIX)) {\n        const stateKeys = storageKey\n          .replace(APP_PREFIX, '')\n          .toLowerCase()\n          .split('.')\n          .map(key =>\n            key\n              .split('-')\n              .map((token, index) =>\n                index === 0\n                  ? token\n                  : token.charAt(0).toUpperCase() + token.slice(1)\n              )\n              .join('')\n          );\n        let currentStateRef = state;\n        stateKeys.forEach((key, index) => {\n          if (index === stateKeys.length - 1) {\n            currentStateRef[key] = JSON.parse(localStorage.getItem(storageKey));\n            return;\n          }\n          currentStateRef[key] = currentStateRef[key] || {};\n          currentStateRef = currentStateRef[key];\n        });\n      }\n      return state;\n    }, {});\n  }\n\n  setItem(key: string, value: any) {\n    localStorage.setItem(`${APP_PREFIX}${key}`, JSON.stringify(value));\n  }\n\n  getItem(key: string) {\n    return JSON.parse(localStorage.getItem(`${APP_PREFIX}${key}`));\n  }\n\n  removeItem(key: string) {\n    localStorage.removeItem(`${APP_PREFIX}${key}`);\n  }\n\n  /** Tests that localStorage exists, can be written to, and read from. */\n  testLocalStorage() {\n    const testValue = 'testValue';\n    const testKey = 'testKey';\n    const errorMessage = 'localStorage did not return expected value';\n\n    this.setItem(testKey, testValue);\n    const retrievedValue = this.getItem(testKey);\n    this.removeItem(testKey);\n\n    if (retrievedValue !== testValue) {\n      throw new Error(errorMessage);\n    }\n  }\n}\n","import { ActionReducer } from '@ngrx/store';\n\nimport { AppState } from '../core.state';\n\nexport function debug(\n  reducer: ActionReducer<AppState>\n): ActionReducer<AppState> {\n  return function(state, action) {\n    const newState = reducer(state, action);\n    console.log(`[DEBUG] action: ${action.type}`, {\n      payload: (action as any).payload,\n      oldState: state,\n      newState\n    });\n    return newState;\n  };\n}\n","/* eslint-disable prefer-arrow/prefer-arrow-functions */\nimport { ActionReducer, INIT, UPDATE } from '@ngrx/store';\n\nimport { LocalStorageService } from '../local-storage/local-storage.service';\nimport { AppState } from '../core.state';\n\nexport function initStateFromLocalStorage(\n  reducer: ActionReducer<AppState>\n): ActionReducer<AppState> {\n  return function(state, action) {\n    const newState = reducer(state, action);\n    if ([INIT.toString(), UPDATE.toString()].includes(action.type)) {\n      return { ...newState, ...LocalStorageService.loadInitialState() };\n    }\n    return newState;\n  };\n}\n","import { Injectable, NgZone } from '@angular/core';\nimport { MatSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationService {\n  constructor(\n    private readonly snackBar: MatSnackBar,\n    private readonly zone: NgZone\n  ) {}\n\n  default(message: string) {\n    this.show(message, {\n      duration: 2000,\n      panelClass: 'default-notification-overlay'\n    });\n  }\n\n  info(message: string) {\n    this.show(message, {\n      duration: 2000,\n      panelClass: 'info-notification-overlay'\n    });\n  }\n\n  success(message: string) {\n    this.show(message, {\n      duration: 2000,\n      panelClass: 'success-notification-overlay'\n    });\n  }\n\n  warn(message: string) {\n    this.show(message, {\n      duration: 2500,\n      panelClass: 'warning-notification-overlay'\n    });\n  }\n\n  error(message: string) {\n    this.show(message, {\n      duration: 3000,\n      panelClass: 'error-notification-overlay'\n    });\n  }\n\n  private show(message: string, configuration: MatSnackBarConfig) {\n    // Need to open snackBar from Angular zone to prevent issues with its position per\n    // https://stackoverflow.com/questions/50101912/snackbar-position-wrong-when-use-errorhandler-in-angular-5-and-material\n    this.zone.run(() => this.snackBar.open(message, null, configuration));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { RouterStateSnapshot } from '@angular/router';\nimport { RouterStateSerializer } from '@ngrx/router-store';\nimport { RouterStateUrl } from './router.state';\n\n@Injectable()\nexport class CustomSerializer implements RouterStateSerializer<RouterStateUrl> {\n  serialize(routerState: RouterStateSnapshot): RouterStateUrl {\n    let route = routerState.root;\n\n    while (route.firstChild) {\n      route = route.firstChild;\n    }\n\n    const {\n      url,\n      root: { queryParams }\n    } = routerState;\n    const { params } = route;\n\n    return { url, params, queryParams };\n  }\n}\n","import { createAction, props } from '@ngrx/store';\n\nimport { Language } from './settings.model';\n\nexport const actionSettingsChangeLanguage = createAction(\n  '[Settings] Change Language',\n  props<{ language: Language }>()\n);\n\nexport const actionSettingsChangeTheme = createAction(\n  '[Settings] Change Theme',\n  props<{ theme: string }>()\n);\nexport const actionSettingsChangeAutoNightMode = createAction(\n  '[Settings] Change Auto Night Mode',\n  props<{ autoNightMode: boolean }>()\n);\n\nexport const actionSettingsChangeStickyHeader = createAction(\n  '[Settings] Change Sticky Header',\n  props<{ stickyHeader: boolean }>()\n);\n\nexport const actionSettingsChangeAnimationsPage = createAction(\n  '[Settings] Change Animations Page',\n  props<{ pageAnimations: boolean }>()\n);\n\nexport const actionSettingsChangeAnimationsPageDisabled = createAction(\n  '[Settings] Change Animations Page Disabled',\n  props<{ pageAnimationsDisabled: boolean }>()\n);\n\nexport const actionSettingsChangeAnimationsElements = createAction(\n  '[Settings] Change Animations Elements',\n  props<{ elementsAnimations: boolean }>()\n);\nexport const actionSettingsChangeHour = createAction(\n  '[Settings] Change Hours',\n  props<{ hour: number }>()\n);\n","import { ActivationEnd, Router } from '@angular/router';\nimport { Injectable, NgZone } from '@angular/core';\nimport { OverlayContainer } from '@angular/cdk/overlay';\nimport { select, Store } from '@ngrx/store';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { TranslateService } from '@ngx-translate/core';\nimport { combineLatest, merge, of } from 'rxjs';\nimport {\n  tap,\n  withLatestFrom,\n  distinctUntilChanged,\n  filter\n} from 'rxjs/operators';\n\nimport { selectSettingsState } from '../core.state';\nimport { LocalStorageService } from '../local-storage/local-storage.service';\nimport { AnimationsService } from '../animations/animations.service';\nimport { TitleService } from '../title/title.service';\n\nimport {\n  actionSettingsChangeAnimationsElements,\n  actionSettingsChangeAnimationsPage,\n  actionSettingsChangeAnimationsPageDisabled,\n  actionSettingsChangeAutoNightMode,\n  actionSettingsChangeLanguage,\n  actionSettingsChangeTheme,\n  actionSettingsChangeStickyHeader,\n  actionSettingsChangeHour\n} from './settings.actions';\nimport {\n  selectEffectiveTheme,\n  selectSettingsLanguage,\n  selectPageAnimations,\n  selectElementsAnimations\n} from './settings.selectors';\nimport { State } from './settings.model';\n\nexport const SETTINGS_KEY = 'SETTINGS';\n\nconst INIT = of('stms-init-effect-trigger');\n\n@Injectable()\nexport class SettingsEffects {\n  hour = 0;\n\n  changeHour = this.ngZone.runOutsideAngular(() =>\n    setInterval(() => {\n      const hour = new Date().getHours();\n      if (hour !== this.hour) {\n        this.hour = hour;\n        this.ngZone.run(() =>\n          this.store.dispatch(actionSettingsChangeHour({ hour }))\n        );\n      }\n    }, 60_000)\n  );\n\n  persistSettings = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(\n          actionSettingsChangeAnimationsElements,\n          actionSettingsChangeAnimationsPage,\n          actionSettingsChangeAnimationsPageDisabled,\n          actionSettingsChangeAutoNightMode,\n          actionSettingsChangeLanguage,\n          actionSettingsChangeStickyHeader,\n          actionSettingsChangeTheme\n        ),\n        withLatestFrom(this.store.pipe(select(selectSettingsState))),\n        tap(([action, settings]) =>\n          this.localStorageService.setItem(SETTINGS_KEY, settings)\n        )\n      ),\n    { dispatch: false }\n  );\n\n  updateRouteAnimationType = createEffect(\n    () =>\n      merge(\n        INIT,\n        this.actions$.pipe(\n          ofType(\n            actionSettingsChangeAnimationsElements,\n            actionSettingsChangeAnimationsPage\n          )\n        )\n      ).pipe(\n        withLatestFrom(\n          combineLatest([\n            this.store.pipe(select(selectPageAnimations)),\n            this.store.pipe(select(selectElementsAnimations))\n          ])\n        ),\n        tap(([action, [pageAnimations, elementsAnimations]]) =>\n          this.animationsService.updateRouteAnimationType(\n            pageAnimations,\n            elementsAnimations\n          )\n        )\n      ),\n    { dispatch: false }\n  );\n\n  updateTheme = createEffect(\n    () =>\n      merge(INIT, this.actions$.pipe(ofType(actionSettingsChangeTheme))).pipe(\n        withLatestFrom(this.store.pipe(select(selectEffectiveTheme))),\n        tap(([action, effectiveTheme]) => {\n          const classList = this.overlayContainer.getContainerElement()\n            .classList;\n          const toRemove = Array.from(classList).filter((item: string) =>\n            item.includes('-theme')\n          );\n          if (toRemove.length) {\n            classList.remove(...toRemove);\n          }\n          classList.add(effectiveTheme);\n        })\n      ),\n    { dispatch: false }\n  );\n\n  setTranslateServiceLanguage = createEffect(\n    () =>\n      this.store.pipe(\n        select(selectSettingsLanguage),\n        distinctUntilChanged(),\n        tap(language => this.translateService.use(language))\n      ),\n    { dispatch: false }\n  );\n\n  setTitle = createEffect(\n    () =>\n      merge(\n        this.actions$.pipe(ofType(actionSettingsChangeLanguage)),\n        this.router.events.pipe(filter(event => event instanceof ActivationEnd))\n      ).pipe(\n        tap(() => {\n          this.titleService.setTitle(\n            this.router.routerState.snapshot.root,\n            this.translateService\n          );\n        })\n      ),\n    { dispatch: false }\n  );\n\n  constructor(\n    private actions$: Actions,\n    private store: Store<State>,\n    private router: Router,\n    private overlayContainer: OverlayContainer,\n    private localStorageService: LocalStorageService,\n    private titleService: TitleService,\n    private animationsService: AnimationsService,\n    private translateService: TranslateService,\n    private ngZone: NgZone\n  ) {}\n}\n","import { AppState } from '../core.module';\n\nexport const NIGHT_MODE_THEME = 'BLACK-THEME';\n\nexport type Language = 'en' | 'he';\n\nexport interface SettingsState {\n  language: string;\n  theme: string;\n  autoNightMode: boolean;\n  nightTheme: string;\n  stickyHeader: boolean;\n  pageAnimations: boolean;\n  pageAnimationsDisabled: boolean;\n  elementsAnimations: boolean;\n  hour: number;\n}\n\nexport interface State extends AppState {\n  settings: SettingsState;\n}\n","import { SettingsState, NIGHT_MODE_THEME } from './settings.model';\nimport {\n  actionSettingsChangeAnimationsElements,\n  actionSettingsChangeAnimationsPage,\n  actionSettingsChangeAnimationsPageDisabled,\n  actionSettingsChangeAutoNightMode,\n  actionSettingsChangeHour,\n  actionSettingsChangeLanguage,\n  actionSettingsChangeStickyHeader,\n  actionSettingsChangeTheme\n} from './settings.actions';\nimport { Action, createReducer, on } from '@ngrx/store';\n\nexport const initialState: SettingsState = {\n  language: 'en',\n  theme: 'DEFAULT-THEME',\n  autoNightMode: false,\n  nightTheme: NIGHT_MODE_THEME,\n  stickyHeader: true,\n  pageAnimations: true,\n  pageAnimationsDisabled: false,\n  elementsAnimations: true,\n  hour: 0\n};\n\nconst reducer = createReducer(\n  initialState,\n  on(\n    actionSettingsChangeLanguage,\n    actionSettingsChangeTheme,\n    actionSettingsChangeAutoNightMode,\n    actionSettingsChangeStickyHeader,\n    actionSettingsChangeAnimationsPage,\n    actionSettingsChangeAnimationsElements,\n    actionSettingsChangeHour,\n    (state, action) => ({ ...state, ...action })\n  ),\n  on(\n    actionSettingsChangeAnimationsPageDisabled,\n    (state, { pageAnimationsDisabled }) => ({\n      ...state,\n      pageAnimationsDisabled,\n      pageAnimations: false\n    })\n  )\n);\n\nexport function settingsReducer(\n  state: SettingsState | undefined,\n  action: Action\n) {\n  return reducer(state, action);\n}\n","import { createSelector } from '@ngrx/store';\n\nimport { SettingsState } from './settings.model';\nimport { selectSettingsState } from '../core.state';\n\nexport const selectSettings = createSelector(\n  selectSettingsState,\n  (state: SettingsState) => state\n);\n\nexport const selectSettingsStickyHeader = createSelector(\n  selectSettings,\n  (state: SettingsState) => state.stickyHeader\n);\n\nexport const selectSettingsLanguage = createSelector(\n  selectSettings,\n  (state: SettingsState) => state.language\n);\n\nexport const selectTheme = createSelector(\n  selectSettings,\n  (settings) => settings.theme\n);\n\nexport const selectPageAnimations = createSelector(\n  selectSettings,\n  (settings) => settings.pageAnimations\n);\n\nexport const selectElementsAnimations = createSelector(\n  selectSettings,\n  (settings) => settings.elementsAnimations\n);\n\nexport const selectAutoNightMode = createSelector(\n  selectSettings,\n  (settings) => settings.autoNightMode\n);\n\nexport const selectNightTheme = createSelector(\n  selectSettings,\n  (settings) => settings.nightTheme\n);\n\nexport const selectHour = createSelector(\n  selectSettings,\n  (settings) => settings.hour\n);\n\nexport const selectIsNightHour = createSelector(\n  selectAutoNightMode,\n  selectHour,\n  (autoNightMode, hour) => autoNightMode && (hour >= 21 || hour <= 7)\n);\n\nexport const selectEffectiveTheme = createSelector(\n  selectTheme,\n  selectNightTheme,\n  selectIsNightHour,\n  (theme, nightTheme, isNightHour) =>\n    (isNightHour ? nightTheme : theme).toLowerCase()\n);\n","import { Title } from '@angular/platform-browser';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { filter } from 'rxjs/operators';\n\nimport { environment as env } from '../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TitleService {\n  constructor(\n    private translateService: TranslateService,\n    private title: Title\n  ) {}\n\n  setTitle(\n    snapshot: ActivatedRouteSnapshot,\n    lazyTranslateService?: TranslateService\n  ) {\n    let lastChild = snapshot;\n    while (lastChild.children.length) {\n      lastChild = lastChild.children[0];\n    }\n    const { title } = lastChild.data;\n    const translate = lazyTranslateService || this.translateService;\n    if (title) {\n      translate\n        .get(title)\n        .pipe(filter(translatedTitle => translatedTitle !== title))\n        .subscribe(translatedTitle =>\n          this.title.setTitle(`${translatedTitle} - ${env.appName}`)\n        );\n    } else {\n      this.title.setTitle(env.appName);\n    }\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\n\nimport { CoreModule } from './core/core.module';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppRootComponent } from './app-root/app-root.component';\n\n@NgModule({\n  imports: [\n    // angular\n    BrowserAnimationsModule,\n    BrowserModule,\n\n    // core\n    CoreModule,\n\n    // app\n    AppRoutingModule\n  ],\n  declarations: [AppRootComponent],\n  bootstrap: [AppRootComponent]\n})\nexport class MainModule {}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nconst packageJson = require(\"../../package.json\");\n\nexport const environment = {\n  apiUrl: \"https://api.mocki.io\",\n  appName: \"STMS test task\",\n  envName: \"DEV\",\n  production: false,\n  test: false,\n  i18nPrefix: \".\",\n  versions: {\n    app: packageJson.version,\n    angular: packageJson.dependencies[\"@angular/core\"],\n    ngrx: packageJson.dependencies[\"@ngrx/store\"],\n    material: packageJson.dependencies[\"@angular/material\"],\n    bootstrap: packageJson.dependencies.bootstrap,\n    rxjs: packageJson.dependencies.rxjs,\n    ngxtranslate: packageJson.dependencies[\"@ngx-translate/core\"],\n    fontAwesome: packageJson.dependencies[\"@fortawesome/fontawesome-free\"],\n    angularCli: packageJson.devDependencies[\"@angular/cli\"],\n    typescript: packageJson.devDependencies.typescript,\n    cypress: packageJson.devDependencies.cypress,\n    eslint: packageJson.devDependencies.eslint,\n  },\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { MainModule } from './app/main.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(MainModule)\n  .catch(err => console.error(err));\n"]}