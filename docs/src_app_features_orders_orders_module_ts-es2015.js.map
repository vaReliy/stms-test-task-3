{"version":3,"file":"src_app_features_orders_orders_module_ts-es2015.js","mappings":";;;;;;;;;;;;;;;;AACuD;AAEK;;;AAE5D,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,qEAAe;QAC1B,IAAI,EAAE,EAAE,KAAK,EAAE,kBAAkB,EAAE;KACpC;CACF,CAAC;AAMK,MAAM,mBAAmB;;sFAAnB,mBAAmB;gHAAnB,mBAAmB;oHAHrB,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC,EAC9B,yDAAY;mIAEX,mBAAmB,oFAFpB,yDAAY;;;;;;;;;;;;;;;;;;;;;ACfuB;AAEU;AAEC;AACI;AAEF;;AAMrD,MAAM,YAAY;;wEAAZ,YAAY;yGAAZ,YAAY;6GAFd,CAAC,yDAAY,EAAE,+DAAY,EAAE,uEAAmB,EAAE,mEAAc,CAAC;mIAE/D,YAAY,mBAHR,qEAAe,aACpB,yDAAY,EAAE,+DAAY,EAAE,uEAAmB,EAAE,mEAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVA;AACV;AAEK;AACL;AAErB;AAEiD;AACF;;;;;;;;;;;ICCrF,qFAKmC;IAAjC,2VAAgC;IAClC,4DAAkB;;;;IAJhB,yEAAa;;ADKd,MAAM,eAAe;IAW1B,YACmB,MAA8B,EAC9B,aAA4B;QAD5B,WAAM,GAAN,MAAM,CAAwB;QAC9B,kBAAa,GAAb,aAAa,CAAe;QAZ/C,4BAAuB,GAAG,wEAAyB,CAAC;QAIpD,oBAAe,GAAwB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,mDAAM,CAAC,6FAAoB,CAAC,CAAC,CAAC;QAEtF,aAAQ,GAAG,IAAI,yCAAO,EAAE,CAAC;QAEzB,eAAU,GAAG,IAAI,iDAAe,CAAU,KAAK,CAAC,CAAC;IAK5C,CAAC;IAEN,QAAQ;QACN,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAClC,oDAAG,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EACrC,0DAAS,CAAC,GAAG,EAAE,CAAC,oDAAa,CAAC;YAC5B,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE;YACjC,IAAI,CAAC,eAAe;SACrB,CAAC,CAAC,EACH,oDAAG,CAAC,CAAC,CAAC,SAAS,EAAE,cAAc,CAAC,EAAE,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;;YAAC,wCACrD,KAAK,KACR,UAAU,EAAE,oBAAc,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,QAAQ,KAAK,KAAK,CAAC,QAAQ,CAAC,0CAAE,UAAU,IACjF;SAAA,CAAC,CAAC,EACN,2DAAU,CAAC,GAAG,EAAE;YACd,wBAAwB;YACxB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC5B,OAAO,EAAE,CAAC;QACZ,CAAC,CAAC,EACF,oDAAG,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CACvC,CAAC;IACJ,CAAC;IAED,SAAS;QACP,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACzB,CAAC;IAED,aAAa,CAAC,KAAY;QACxB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,+FAAwB,CAAC;YAChD,KAAK,kCACA,KAAK,KACR,UAAU,EAAE,IAAI,GACjB;SACF,CAAC,CAAC,CAAC;IACN,CAAC;;8EA/CU,eAAe;6GAAf,eAAe;QClB5B,yEAAuB;QACrB,yEAAS;QACP,wEAAyB;QAAA,uDAAqC;;QAAA,4DAAK;QACnE,yEAAqB;QACnB,4EAGyD;QAFvD,uIAAS,eAAW,IAAC;;QAGrB,uDACF;;QAAA,4DAAS;QAET,qIAMkB;;QACpB,4DAAM;QAER,4DAAM;QACR,4DAAM;;QAnBuB,0DAAqC;QAArC,qJAAqC;QAI1D,0DAA+B;QAA/B,qJAA+B;QAE/B,0DACF;QADE,qKACF;QAGG,0DAAyB;QAAzB,mJAAyB;;;;;;;;;;;;;;;;;;;;ACZgB;AAGb;AACwB;;;AAMtD,MAAM,UAAU;IACrB,YAA6B,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAC7C,CAAC;IAED,OAAO;QACL,MAAM,GAAG,GAAG,GAAG,yEAAkB,cAAc,CAAC;QAEhD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAqB,GAAG,CAAC,CAAC,IAAI,CAAC,mDAAG,CAAC,CAAC,EAAC,KAAK,EAAC,EAAE,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;IAC9E,CAAC;;oEARU,UAAU;2GAAV,UAAU,WAAV,UAAU,mBAFT,MAAM;;;;;;;;;;;;;;;;;ACN6C;;;AAM1D,MAAM,aAAa;IACxB,YAA6B,SAAqB;QAArB,cAAS,GAAT,SAAS,CAAY;IAAG,CAAC;IAEtD,YAAY;QACV,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;IAClC,CAAC;;0EALU,aAAa;8GAAb,aAAa,WAAb,aAAa,mBAFZ,MAAM","sources":["./src/app/features/orders/orders-routing.module.ts","./src/app/features/orders/orders.module.ts","./src/app/features/orders/orders/orders.component.ts","./src/app/features/orders/orders/orders.component.html","./src/app/repositories/orders-repo.service.ts","./src/app/services/orders.service.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { OrdersComponent } from './orders/orders.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: OrdersComponent,\n    data: { title: 'stms.menu.orders' }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class OrdersRoutingModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatTableModule } from '@angular/material/table';\n\nimport { SharedModule } from '../../shared/shared.module';\nimport { OrdersRoutingModule } from './orders-routing.module';\n\nimport { OrdersComponent } from './orders/orders.component';\n\n@NgModule({\n  declarations: [OrdersComponent],\n  imports: [CommonModule, SharedModule, OrdersRoutingModule, MatTableModule],\n})\nexport class OrdersModule {}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { BehaviorSubject, Observable, Subject, combineLatest } from 'rxjs';\nimport { switchMap, map, tap, catchError } from 'rxjs/operators';\n\nimport { ROUTE_ANIMATIONS_ELEMENTS } from '../../../core/core.module';\nimport { OrdersService } from '../../../services/orders.service';\nimport { Order } from '../../../shared/models/order.model';\nimport { Store, select } from '@ngrx/store';\nimport { FollowListState } from '../../../features/follow-list/follow.list.reducers';\nimport { AddFollowListOrderAction } from '../../../features/follow-list/follow-list.actions';\nimport { selectFollowedOrders } from '../../../features/follow-list/follow-list.selectors';\n\n@Component({\n  selector: 'st-orders',\n  templateUrl: './orders.component.html',\n  styleUrls: ['./orders.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class OrdersComponent implements OnInit {\n  routeAnimationsElements = ROUTE_ANIMATIONS_ELEMENTS;\n\n  orderList$: Observable<Order[]>;\n\n  followedOrders$: Observable<Order[]> = this.store$.pipe(select(selectFollowedOrders));\n\n  refresh$ = new Subject();\n\n  isLoading$ = new BehaviorSubject<boolean>(false);\n\n  constructor(\n    private readonly store$: Store<FollowListState>,\n    private readonly ordersService: OrdersService\n    ) {}\n\n  ngOnInit() {\n    this.orderList$ = this.refresh$.pipe(\n      tap(() => this.isLoading$.next(true)),\n      switchMap(() => combineLatest([\n        this.ordersService.getOrderList(),\n        this.followedOrders$\n      ])),\n      map(([orderList, followedOrders]) => orderList.map(order => ({\n          ...order,\n          isFollowup: followedOrders.find(fo => fo.orderNum === order.orderNum)?.isFollowup\n        }))),\n      catchError(() => {\n        // todo: do error handle\n        this.isLoading$.next(false);\n        return [];\n      }),\n      tap(() => this.isLoading$.next(false))\n    );\n  }\n\n  onRefresh(): void {\n    this.refresh$.next({});\n  }\n\n  onFollowOrder(order: Order): void {\n    this.store$.dispatch(new AddFollowListOrderAction({\n      order: {\n        ...order,\n        isFollowup: true\n      }\n    }));\n  }\n}\n","<div class=\"container\">\n  <div rtl>\n    <h1 class=\"main-heading\">{{ 'stms.orders.title' | translate }}</h1>\n    <div class=\"actions\">\n      <button\n        (click)=\"onRefresh()\"\n        [disabled]=\"isLoading$ | async\"\n        mat-raised-button class=\"actions-main\" color=\"primary\">\n        {{ 'stms.orders.get-orders' | translate }}\n      </button>\n\n      <st-orders-table\n        *ngIf=\"orderList$ | async as data\"\n        [data]=\"data\"\n        [isLoading$]=\"isLoading$\"\n        [actionType]=\"'add'\"\n        (action)=\"onFollowOrder($event)\">\n      </st-orders-table>\n    </div>\n\n  </div>\n</div>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { environment } from '../../environments/environment';\nimport { Order } from '../shared/models/order.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrdersRepo {\n  constructor(private readonly http: HttpClient) {\n  }\n\n  getList(): Observable<Order[]> {\n    const url = `${environment.apiUrl}/v2/79fb05cb`;\n\n    return this.http.get<{ order: Order[] }>(url).pipe(map(({order}) => order));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { OrdersRepo } from '../repositories/orders-repo.service';\nimport { Order } from '../shared/models/order.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrdersService {\n  constructor(private readonly orderRepo: OrdersRepo) {}\n\n  getOrderList(): Observable<Order[]> {\n    return this.orderRepo.getList();\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///"}