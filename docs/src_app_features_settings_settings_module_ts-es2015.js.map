{"version":3,"file":"src_app_features_settings_settings_module_ts-es2015.js","mappings":"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","sources":["./src/app/features/settings/settings-routing.module.ts","./src/app/features/settings/settings.module.ts","./src/app/features/settings/settings/settings-container.component.ts","./src/app/features/settings/settings/settings-container.component.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SettingsContainerComponent } from './settings/settings-container.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SettingsContainerComponent,\n    data: { title: 'stms.menu.settings' }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SettingsRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SharedModule } from '../../shared/shared.module';\n\nimport { SettingsRoutingModule } from './settings-routing.module';\nimport { SettingsContainerComponent } from './settings/settings-container.component';\n\n@NgModule({\n  declarations: [SettingsContainerComponent],\n  imports: [CommonModule, SharedModule, SettingsRoutingModule]\n})\nexport class SettingsModule {}\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\nimport { Observable } from 'rxjs';\n\nimport { ROUTE_ANIMATIONS_ELEMENTS } from '../../../core/core.module';\n\nimport {\n  actionSettingsChangeAnimationsElements,\n  actionSettingsChangeAnimationsPage,\n  actionSettingsChangeAutoNightMode,\n  actionSettingsChangeLanguage,\n  actionSettingsChangeTheme,\n  actionSettingsChangeStickyHeader\n} from '../../../core/settings/settings.actions';\nimport { SettingsState, State } from '../../../core/settings/settings.model';\nimport { selectSettings } from '../../../core/settings/settings.selectors';\n\n@Component({\n  selector: 'st-settings',\n  templateUrl: './settings-container.component.html',\n  styleUrls: ['./settings-container.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SettingsContainerComponent implements OnInit {\n  routeAnimationsElements = ROUTE_ANIMATIONS_ELEMENTS;\n  settings$: Observable<SettingsState>;\n\n  themes = [\n    { value: 'DEFAULT-THEME', label: 'cyan' },\n    { value: 'LIGHT-THEME', label: 'light' },\n    { value: 'NATURE-THEME', label: 'nature' },\n    { value: 'BLACK-THEME', label: 'dark' }\n  ];\n\n  languages = [\n    { value: 'en', label: 'English' },\n    { value: 'he', label: 'עברית' }\n  ];\n\n  constructor(private store: Store<State>) {}\n\n  ngOnInit() {\n    this.settings$ = this.store.pipe(select(selectSettings));\n  }\n\n  onLanguageSelect({ value: language }) {\n    this.store.dispatch(actionSettingsChangeLanguage({ language }));\n  }\n\n  onThemeSelect({ value: theme }) {\n    this.store.dispatch(actionSettingsChangeTheme({ theme }));\n  }\n\n  onAutoNightModeToggle({ checked: autoNightMode }) {\n    this.store.dispatch(actionSettingsChangeAutoNightMode({ autoNightMode }));\n  }\n\n  onStickyHeaderToggle({ checked: stickyHeader }) {\n    this.store.dispatch(actionSettingsChangeStickyHeader({ stickyHeader }));\n  }\n\n  onPageAnimationsToggle({ checked: pageAnimations }) {\n    this.store.dispatch(actionSettingsChangeAnimationsPage({ pageAnimations }));\n  }\n\n  onElementsAnimationsToggle({ checked: elementsAnimations }) {\n    this.store.dispatch(\n      actionSettingsChangeAnimationsElements({ elementsAnimations })\n    );\n  }\n}\n","<div rtl class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-sm-12\">\n      <h1>{{ 'stms.settings.title' | translate }}</h1>\n    </div>\n  </div>\n  <br>\n  <ng-container *ngIf=\"settings$ | async as settings\">\n    <div class=\"row\">\n      <div class=\"col-md-6 group\" [ngClass]=\"routeAnimationsElements\">\n        <h2>{{ 'stms.settings.general.title' | translate }}</h2>\n        <div class=\"icon-form-field\">\n          <mat-icon color=\"accent\">\n            <fa-icon icon=\"language\" color=\"accent\"></fa-icon>\n          </mat-icon>\n          <mat-form-field rtl>\n            <mat-select rtl [placeholder]=\"'stms.settings.general.placeholder' | translate\"\n              [ngModel]=\"settings.language\" (selectionChange)=\"onLanguageSelect($event)\" name=\"language\">\n              <ng-container *ngFor=\"let lang of languages\">\n                <!-- ngFor hack of missing ngLet of Angular -->\n                <mat-option rtl *ngFor=\"let title of ['stms.settings.general.language.' + lang.value | translate]\"\n                  [value]=\"lang.value\" [title]=\"title !== lang.label\n                    ? title\n                    : ''\">\n                  {{ lang.label }}\n                </mat-option>\n              </ng-container>\n            </mat-select>\n          </mat-form-field>\n        </div>\n        <div class=\"icon-form-field\">\n          <mat-icon color=\"accent\">\n            <fa-icon icon=\"bars\" color=\"accent\"></fa-icon>\n          </mat-icon>\n          <mat-placeholder>{{ 'stms.settings.themes.sticky-header' | translate }}\n          </mat-placeholder>\n          <mat-slide-toggle [checked]=\"settings.stickyHeader\" (change)=\"onStickyHeaderToggle($event)\">\n          </mat-slide-toggle>\n        </div>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-md-6 group\" [ngClass]=\"routeAnimationsElements\">\n        <h2>{{ 'stms.settings.themes.title' | translate }}</h2>\n        <div class=\"icon-form-field\">\n          <mat-icon color=\"accent\">\n            <fa-icon icon=\"paint-brush\" color=\"accent\"></fa-icon>\n          </mat-icon>\n          <mat-form-field rtl>\n            <mat-select rtl [placeholder]=\"'stms.settings.themes.placeholder' | translate\" [ngModel]=\"settings.theme\"\n              (selectionChange)=\"onThemeSelect($event)\" name=\"themes\">\n              <mat-option rtl *ngFor=\"let theme of themes\" [value]=\"theme.value\">\n                {{ 'stms.settings.themes.' + theme.label | translate }}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n        </div>\n        <div class=\"icon-form-field\">\n          <mat-icon color=\"accent\">\n            <fa-icon icon=\"lightbulb\" color=\"accent\"></fa-icon>\n          </mat-icon>\n          <mat-placeholder>{{ 'stms.settings.themes.night-mode' | translate }}\n          </mat-placeholder>\n          <mat-slide-toggle [checked]=\"settings.autoNightMode\" (change)=\"onAutoNightModeToggle($event)\">\n          </mat-slide-toggle>\n        </div>\n      </div>\n      <div class=\"col-md-6 group\" [ngClass]=\"routeAnimationsElements\">\n        <h2>{{ 'stms.settings.animations.title' | translate }}</h2>\n        <div class=\"icon-form-field\">\n          <mat-icon color=\"accent\">\n            <mat-icon color=\"accent\">\n              <fa-icon icon=\"window-maximize\"></fa-icon>\n            </mat-icon>\n          </mat-icon>\n          <mat-placeholder>{{ 'stms.settings.animations.page' | translate }}\n          </mat-placeholder>\n          <mat-slide-toggle matTooltip=\"Sorry, this feature is disabled in IE, EDGE and Safari\"\n            matTooltipPosition=\"before\" *ngIf=\"settings.pageAnimationsDisabled\" disabled>\n          </mat-slide-toggle>\n          <mat-slide-toggle *ngIf=\"!settings.pageAnimationsDisabled\" [checked]=\"settings.pageAnimations\"\n            (change)=\"onPageAnimationsToggle($event)\">\n          </mat-slide-toggle>\n        </div>\n        <div class=\"icon-form-field\">\n          <mat-icon color=\"accent\">\n            <fa-icon icon=\"stream\" color=\"accent\"></fa-icon>\n          </mat-icon>\n          <mat-placeholder>{{ 'stms.settings.animations.elements' | translate }}\n          </mat-placeholder>\n          <mat-slide-toggle [checked]=\"settings.elementsAnimations\" (change)=\"onElementsAnimationsToggle($event)\">\n          </mat-slide-toggle>\n        </div>\n      </div>\n    </div>\n  </ng-container>\n</div>"],"names":[],"sourceRoot":"webpack:///"}