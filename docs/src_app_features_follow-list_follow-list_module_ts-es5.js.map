{"version":3,"mappings":"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","names":["_angular_core__WEBPACK_IMPORTED_MODULE_0__","FilterComponent","fb","group","filterBy","control","query","rxjs__WEBPACK_IMPORTED_MODULE_1__","form","valueChanges","pipe","subscribeHolder$","subscribe","filter","filterChange","emit","reset","get","_a","setValue","next","complete","selectors","outputs","decls","vars","consts","template","ctx","routes","path","component","_follow_list_follow_list_component__WEBPACK_IMPORTED_MODULE_0__","data","title","FollowListRoutingModule","_angular_router__WEBPACK_IMPORTED_MODULE_2__","imports","exports","FollowListModule","_angular_common__WEBPACK_IMPORTED_MODULE_6__","_follow_list_routing_module__WEBPACK_IMPORTED_MODULE_1__","_ngx_translate_core__WEBPACK_IMPORTED_MODULE_7__","_shared_shared_module__WEBPACK_IMPORTED_MODULE_0__","_ngrx_store__WEBPACK_IMPORTED_MODULE_8__","_follow_list_reducers__WEBPACK_IMPORTED_MODULE_4__","declarations","_follow_list_follow_list_component__WEBPACK_IMPORTED_MODULE_2__","_filter_filter_component__WEBPACK_IMPORTED_MODULE_3__","_angular_core__WEBPACK_IMPORTED_MODULE_6__","_r2","FollowListComponent","store$","_follow_list_selectors__WEBPACK_IMPORTED_MODULE_0__","rxjs__WEBPACK_IMPORTED_MODULE_8__","filterList","list","item","toLowerCase","includes","orderList$","filter$","followedOrders$","patientList$","followedPatients$","order","dispatch","_follow_list_actions__WEBPACK_IMPORTED_MODULE_1__","orderNum","patient","code"],"sources":["webpack:///src/app/features/follow-list/filter/filter.component.html","webpack:///src/app/features/follow-list/filter/filter.component.ts","webpack:///src/app/features/follow-list/follow-list-routing.module.ts","webpack:///src/app/features/follow-list/follow-list.module.ts","webpack:///src/app/features/follow-list/follow-list/follow-list.component.html","webpack:///src/app/features/follow-list/follow-list/follow-list.component.ts"],"sourcesContent":["<div [formGroup]=\"form\" class=\"f-row\">\n    <mat-select formControlName=\"filterBy\" class=\"w-30p\" (selectionChange)=\"clearQuery()\">\n        <mat-option value=\"fullName\">{{'stms.shared.table.title.fullName' | translate}}</mat-option>\n        <mat-option value=\"orderName\">{{'stms.shared.table.title.orderName' | translate}}</mat-option>\n    </mat-select>\n\n    <mat-form-field class=\"ml-20\">\n        <mat-label *ngIf=\"form.get('filterBy')?.value as filterBy\">\n            {{'stms.follow-list.filter.placeholder' | translate}} {{'stms.shared.table.title.' + filterBy | translate}}\n        </mat-label>\n        <input matInput formControlName=\"query\">\n    </mat-form-field>\n\n    <button mat-raised-button class=\"actions-main ml-20\" (click)=\"resetForm()\">\n        {{'stms.follow-list.clear' | translate}}\n    </button>\n</div>\n","import { ChangeDetectionStrategy, Component, EventEmitter, OnDestroy, OnInit, Output } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { auditTime, takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'st-filter',\n  templateUrl: './filter.component.html',\n  styleUrls: ['./filter.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FilterComponent implements OnInit, OnDestroy {\n  @Output() filterChange = new EventEmitter();\n\n  form = this.fb.group({\n    filterBy: this.fb.control('orderName'),\n    query: this.fb.control(''),\n  });\n\n  private subscribeHolder$ = new Subject();\n\n  constructor(private readonly fb: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.form.valueChanges.pipe(\n      auditTime(300),\n      takeUntil(this.subscribeHolder$)\n    ).subscribe((filter) => {\n      this.filterChange.emit(filter);\n    });\n  }\n\n  resetForm(): void {\n    this.form.reset({filterBy: 'orderName'});\n  }\n\n  clearQuery(): void {\n    this.form.get('query')?.setValue('');\n  }\n\n  ngOnDestroy(): void {\n    this.subscribeHolder$.next();\n    this.subscribeHolder$.complete();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FollowListComponent } from './follow-list/follow-list.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FollowListComponent,\n    data: {title: 'stms.menu.follow-list'}\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class FollowListRoutingModule {\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { SharedModule } from '../../shared/shared.module';\nimport { FollowListRoutingModule } from './follow-list-routing.module';\nimport { FollowListComponent } from './follow-list/follow-list.component';\nimport { FilterComponent } from './filter/filter.component';\nimport { StoreModule } from '@ngrx/store';\nimport { featureFollowListNode, followListReducer } from './follow.list.reducers';\n\n\n@NgModule({\n  declarations: [FollowListComponent, FilterComponent],\n  imports: [\n    CommonModule,\n    FollowListRoutingModule,\n    TranslateModule,\n    SharedModule,\n    StoreModule.forFeature(featureFollowListNode, followListReducer)\n  ]\n})\nexport class FollowListModule {\n}\n","<div class=\"container\">\n    <div rtl>\n        <h1 class=\"main-heading\">{{ 'stms.follow-list.title' | translate }}</h1>\n        <div class=\"actions\">\n            <st-filter (filterChange)=\"onFilterChange($event)\"></st-filter>\n\n            <div *ngIf=\"orderList$ | async as orderList\" class=\"mt-2rem\">\n                <h2>{{'stms.follow-list.orders' | translate}}</h2>\n                <st-orders-table\n                    *ngIf=\"orderList.length; else empty\"\n                    [data]=\"orderList\"\n                    [actionType]=\"'remove'\"\n                    (action)=\"onUnfollowOrder($event)\">\n                </st-orders-table>\n            </div>\n\n            <div *ngIf=\"patientList$ | async as patientList\" class=\"mt-2rem\">\n                <h2>{{'stms.follow-list.patients' | translate}}</h2>\n                <st-patient-table\n                    *ngIf=\"patientList.length; else empty\"\n                    [data]=\"patientList\"\n                    [actionType]=\"'remove'\"\n                    (action)=\"onUnfollowPatient($event)\">\n                </st-patient-table>\n            </div>\n        </div>\n    </div>\n</div>\n\n<ng-template #empty>\n    <div>{{'stms.follow-list.empty' | translate}}</div>\n</ng-template>\n","/* eslint-disable @typescript-eslint/no-shadow */\nimport { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { combineLatest, Observable, Subject } from 'rxjs';\nimport { filter, map, startWith } from 'rxjs/operators';\nimport { Order } from '../../../shared/models/order.model';\nimport { Patient } from '../../../shared/models/patient.model';\nimport { Store, select } from '@ngrx/store';\nimport { FollowListState } from '../follow.list.reducers';\nimport { selectFollowedOrders, selectFollowedPatients } from '../follow-list.selectors';\nimport { RemoveFollowListOrderAction, RemoveFollowListPatientAction } from '../follow-list.actions';\n\ntype FilterData = {\n  filterBy: 'fullName' | 'orderName';\n  query: string;\n};\n\n@Component({\n  selector: 'st-follow-list',\n  templateUrl: './follow-list.component.html',\n  styleUrls: ['./follow-list.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FollowListComponent implements OnInit {\n  orderList$: Observable<Order[]>;\n  patientList$: Observable<Patient[]>;\n\n  followedOrders$: Observable<Order[]> = this.store$.pipe(select(selectFollowedOrders));\n\n  followedPatients$: Observable<Patient[]> = this.store$.pipe(select(selectFollowedPatients));\n\n  filter$ = new Subject<FilterData>();\n\n  constructor(\n    private readonly store$: Store<FollowListState>,\n  ) {\n  }\n\n  ngOnInit(): void {\n    const filterList = ({filter, list}) => list.filter(\n      (item) => filter.query\n      ? item[filter.filterBy].toLowerCase().includes(filter.query.toLowerCase())\n      : true\n    );\n\n    this.orderList$ = combineLatest([\n      this.filter$.pipe(startWith({filterBy: 'orderName', query: ''})),\n      this.followedOrders$\n    ]).pipe(\n      map(([filter, list]) => ({filter, list})),\n      filter(({filter, list}) => filter.filterBy === 'orderName' || !filter.query),\n      map(filterList)\n    );\n\n    this.patientList$ = combineLatest([\n      this.filter$.pipe(startWith({filterBy: 'fullName', query: ''})),\n      this.followedPatients$\n    ]).pipe(\n      map(([filter, list]) => ({filter, list})),\n      filter(({filter, list}) => filter.filterBy === 'fullName' || !filter.query),\n      map(filterList)\n    );\n  }\n\n  onUnfollowOrder(order: Order): void {\n    this.store$.dispatch(new RemoveFollowListOrderAction({\n      orderNum: order.orderNum\n    }));\n  }\n\n  onUnfollowPatient(patient: Patient): void {\n    this.store$.dispatch(new RemoveFollowListPatientAction({\n      code: patient.code\n    }));\n  }\n\n  onFilterChange(filter: FilterData): void {\n    this.filter$.next(filter);\n  }\n}\n"]}