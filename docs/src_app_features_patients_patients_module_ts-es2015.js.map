{"version":3,"file":"src_app_features_patients_patients_module_ts-es2015.js","mappings":"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","sources":["./src/app/features/patients/patients-routing.module.ts","./src/app/features/patients/patients.module.ts","./src/app/features/patients/patients/patients.component.ts","./src/app/features/patients/patients/patients.component.html","./src/app/repositories/patients-repo.service.ts","./src/app/services/patient.service.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { PatientsComponent } from './patients/patients.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PatientsComponent,\n    data: { title: 'stms.menu.patients' }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PatientsRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SharedModule } from '../../shared/shared.module';\n\nimport { PatientsRoutingModule } from './patients-routing.module';\nimport { PatientsComponent } from './patients/patients.component';\n\n@NgModule({\n  declarations: [PatientsComponent],\n  imports: [CommonModule, SharedModule, PatientsRoutingModule],\n  providers: []\n})\nexport class PatientsModule {}\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { BehaviorSubject, Observable, Subject, combineLatest } from 'rxjs';\nimport { catchError, map, switchMap, tap } from 'rxjs/operators';\n\nimport { ROUTE_ANIMATIONS_ELEMENTS } from '../../../core/core.module';\nimport { PatientService } from '../../../services/patient.service';\nimport { Patient } from '../../../shared/models/patient.model';\nimport { Store, select } from '@ngrx/store';\nimport { FollowListState } from '../../../features/follow-list/follow.list.reducers';\nimport { selectFollowedPatients } from '../../../features/follow-list/follow-list.selectors';\nimport { AddFollowListPatientAction } from '../../../features/follow-list/follow-list.actions';\n\n@Component({\n  selector: 'st-patients',\n  templateUrl: './patients.component.html',\n  styleUrls: ['./patients.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PatientsComponent implements OnInit {\n  routeAnimationsElements = ROUTE_ANIMATIONS_ELEMENTS;\n\n  patientList$: Observable<Patient[]>;\n\n  followedPatients$: Observable<Patient[]> = this.store$.pipe(select(selectFollowedPatients));\n\n  refresh$ = new Subject();\n\n  isLoading$ = new BehaviorSubject<boolean>(false);\n\n  constructor(\n    private readonly store$: Store<FollowListState>,\n    private readonly patientService: PatientService\n    ) {}\n\n  ngOnInit() {\n    this.patientList$ = this.refresh$.pipe(\n      tap(() => this.isLoading$.next(true)),\n      switchMap(() => combineLatest([\n        this.patientService.getPatientList(),\n        this.followedPatients$\n      ])),\n      map(([patientList, followedPatients]) => patientList.map(patient => ({\n          ...patient,\n          followUpPatient: followedPatients.find(fp => fp.code === patient.code)?.followUpPatient\n        }))),\n      catchError(() => {\n        // todo: do error handle\n        this.isLoading$.next(false);\n        return [];\n      }),\n      tap(() => this.isLoading$.next(false))\n    );\n  }\n\n  onRefresh(): void {\n    this.refresh$.next({});\n  }\n\n  onFollowPatient(patient: Patient): void {\n    this.store$.dispatch(new AddFollowListPatientAction({\n      patient: {\n        ...patient,\n        followUpPatient: true\n      }\n    }));\n  }\n}\n","<div class=\"container\">\n  <div rtl>\n    <h1 class=\"main-heading\">{{ 'stms.patients.title' | translate }}</h1>\n    <div class=\"actions\">\n      <button\n        (click)=\"onRefresh()\"\n        mat-raised-button class=\"actions-main\" color=\"primary\">\n        {{ 'stms.patients.get-patients' | translate }}\n      </button>\n\n      <st-patient-table\n        *ngIf=\"patientList$ | async as list\"\n        [data]=\"list\"\n        [isLoading$]=\"isLoading$\"\n        [actionType]=\"'add'\"\n        (action)=\"onFollowPatient($event)\">\n      </st-patient-table>\n    </div>\n  </div>\n</div>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { environment } from '../../environments/environment';\nimport { Patient } from '../shared/models/patient.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PatientsRepo {\n  constructor(private readonly http: HttpClient) {\n  }\n\n  getList(): Observable<Patient[]> {\n    const url = `${environment.apiUrl}/v2/51597ef3`;\n\n    return this.http.get<{ patient: Patient[] }>(url).pipe(map(({patient}) => patient));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { PatientsRepo } from '../repositories/patients-repo.service';\nimport { Patient } from '../shared/models/patient.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PatientService {\n  constructor(private readonly patientsRepo: PatientsRepo) {}\n\n  getPatientList(): Observable<Patient[]> {\n    return this.patientsRepo.getList();\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///"}