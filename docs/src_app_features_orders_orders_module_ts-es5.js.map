{"version":3,"mappings":"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","names":["routes","path","component","_orders_orders_component__WEBPACK_IMPORTED_MODULE_0__","data","title","OrdersRoutingModule","_angular_router__WEBPACK_IMPORTED_MODULE_2__","imports","exports","OrdersModule","_angular_common__WEBPACK_IMPORTED_MODULE_4__","_shared_shared_module__WEBPACK_IMPORTED_MODULE_0__","_orders_routing_module__WEBPACK_IMPORTED_MODULE_1__","_angular_material_table__WEBPACK_IMPORTED_MODULE_5__","declarations","_orders_orders_component__WEBPACK_IMPORTED_MODULE_2__","_angular_core__WEBPACK_IMPORTED_MODULE_6__","ctx_r0","OrdersComponent","store$","ordersService","_core_core_module__WEBPACK_IMPORTED_MODULE_0__","pipe","_features_follow_list_follow_list_selectors__WEBPACK_IMPORTED_MODULE_3__","rxjs__WEBPACK_IMPORTED_MODULE_8__","rxjs__WEBPACK_IMPORTED_MODULE_9__","orderList$","refresh$","isLoading$","next","getOrderList","followedOrders$","orderList","followedOrders","map","order","isFollowup","find","fo","orderNum","_a","dispatch","_features_follow_list_follow_list_actions__WEBPACK_IMPORTED_MODULE_2__","selectors","decls","vars","consts","template","ctx","OrdersRepo","http","url","_environments_environment__WEBPACK_IMPORTED_MODULE_0__","get","_angular_core__WEBPACK_IMPORTED_MODULE_2__","factory","providedIn","OrdersService","orderRepo","getList","_angular_core__WEBPACK_IMPORTED_MODULE_1__"],"sources":["webpack:///src/app/features/orders/orders-routing.module.ts","webpack:///src/app/features/orders/orders.module.ts","webpack:///src/app/features/orders/orders/orders.component.html","webpack:///src/app/features/orders/orders/orders.component.ts","webpack:///src/app/repositories/orders-repo.service.ts","webpack:///src/app/services/orders.service.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { OrdersComponent } from './orders/orders.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: OrdersComponent,\n    data: { title: 'stms.menu.orders' }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class OrdersRoutingModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatTableModule } from '@angular/material/table';\n\nimport { SharedModule } from '../../shared/shared.module';\nimport { OrdersRoutingModule } from './orders-routing.module';\n\nimport { OrdersComponent } from './orders/orders.component';\n\n@NgModule({\n  declarations: [OrdersComponent],\n  imports: [CommonModule, SharedModule, OrdersRoutingModule, MatTableModule],\n})\nexport class OrdersModule {}\n","<div class=\"container\">\n  <div rtl>\n    <h1 class=\"main-heading\">{{ 'stms.orders.title' | translate }}</h1>\n    <div class=\"actions\">\n      <button\n        (click)=\"onRefresh()\"\n        [disabled]=\"isLoading$ | async\"\n        mat-raised-button class=\"actions-main\" color=\"primary\">\n        {{ 'stms.orders.get-orders' | translate }}\n      </button>\n\n      <st-orders-table\n        *ngIf=\"orderList$ | async as data\"\n        [data]=\"data\"\n        [isLoading$]=\"isLoading$\"\n        [actionType]=\"'add'\"\n        (action)=\"onFollowOrder($event)\">\n      </st-orders-table>\n    </div>\n\n  </div>\n</div>\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { BehaviorSubject, Observable, Subject, combineLatest } from 'rxjs';\nimport { switchMap, map, tap, catchError } from 'rxjs/operators';\n\nimport { ROUTE_ANIMATIONS_ELEMENTS } from '../../../core/core.module';\nimport { OrdersService } from '../../../services/orders.service';\nimport { Order } from '../../../shared/models/order.model';\nimport { Store, select } from '@ngrx/store';\nimport { FollowListState } from '../../../features/follow-list/follow.list.reducers';\nimport { AddFollowListOrderAction } from '../../../features/follow-list/follow-list.actions';\nimport { selectFollowedOrders } from '../../../features/follow-list/follow-list.selectors';\n\n@Component({\n  selector: 'st-orders',\n  templateUrl: './orders.component.html',\n  styleUrls: ['./orders.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class OrdersComponent implements OnInit {\n  routeAnimationsElements = ROUTE_ANIMATIONS_ELEMENTS;\n\n  orderList$: Observable<Order[]>;\n\n  followedOrders$: Observable<Order[]> = this.store$.pipe(select(selectFollowedOrders));\n\n  refresh$ = new Subject();\n\n  isLoading$ = new BehaviorSubject<boolean>(false);\n\n  constructor(\n    private readonly store$: Store<FollowListState>,\n    private readonly ordersService: OrdersService\n    ) {}\n\n  ngOnInit() {\n    this.orderList$ = this.refresh$.pipe(\n      tap(() => this.isLoading$.next(true)),\n      switchMap(() => combineLatest([\n        this.ordersService.getOrderList(),\n        this.followedOrders$\n      ])),\n      map(([orderList, followedOrders]) => orderList.map(order => ({\n          ...order,\n          isFollowup: followedOrders.find(fo => fo.orderNum === order.orderNum)?.isFollowup\n        }))),\n      catchError(() => {\n        // todo: do error handle\n        this.isLoading$.next(false);\n        return [];\n      }),\n      tap(() => this.isLoading$.next(false))\n    );\n  }\n\n  onRefresh(): void {\n    this.refresh$.next({});\n  }\n\n  onFollowOrder(order: Order): void {\n    this.store$.dispatch(new AddFollowListOrderAction({\n      order: {\n        ...order,\n        isFollowup: true\n      }\n    }));\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { environment } from '../../environments/environment';\nimport { Order } from '../shared/models/order.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrdersRepo {\n  constructor(private readonly http: HttpClient) {\n  }\n\n  getList(): Observable<Order[]> {\n    const url = `${environment.apiUrl}/v2/79fb05cb`;\n\n    return this.http.get<{ order: Order[] }>(url).pipe(map(({order}) => order));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { OrdersRepo } from '../repositories/orders-repo.service';\nimport { Order } from '../shared/models/order.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrdersService {\n  constructor(private readonly orderRepo: OrdersRepo) {}\n\n  getOrderList(): Observable<Order[]> {\n    return this.orderRepo.getList();\n  }\n}\n"]}